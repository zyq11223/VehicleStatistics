<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<!-- <jaxws:endpoint id="userLoginWebService" implementor="com.fhzz.business.service.webservice.server.login.UserLoginWebService" 
		address="/loginws" publish="true" /> <jaxws:endpoint id="forCsSegmentsWebService" 
		implementor="com.fhzz.business.service.webservice.server.bsforcs.ForCsSegmentsWebService" 
		address="/forcsws" publish="true" /> <jaxws:endpoint id="resManageWebService" 
		implementor="com.fhzz.business.service.webservice.server.resmanege.ResManageWebService" 
		address="/resmanagews" publish="true" /> <jaxws:endpoint id="vmsConnectWebService" 
		implementor="com.fhzz.business.service.webservice.server.vms.VmsConnectWebService" 
		address="/vmsconnectws" publish="true" /> -->
	<import resource="template-context.xml" />
	<!--<import resource="spring-activeMQ.xml" /> -->

	<!-- 扫描注解Bean -->
	<!--<util:properties id="props" location="classpath:config/config.properties" 
		/> -->
	<context:component-scan base-package="com.fhzz"
							use-default-filters="false">
		<context:include-filter type="annotation"
								expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation"
								expression="org.springframework.stereotype.Repository" />
	</context:component-scan>



	<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />
	<!-- <bean id="vehicleApplication" class="com.fhzz.business.controller.vehicle.VehicleApplication"> 
		<constructor-arg ref="cloneCarServiceImpl"/> </bean> -->
	<!-- 配置文件 -->
	<!--<context:property-placeholder location="classpath:config/jdbc.properties,classpath:config/hadoop.properties,classpath:config/config.properties,classpath:config/jdctx.properties" /> -->
	<bean id="propertyConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<set>
				<value>classpath:config/jdbc.properties</value>
			</set>
		</property>
		<property name="fileEncoding">
			<value>UTF-8</value>
		</property>
	</bean>


	<!-- Hibernate -->
	<!--	<bean id="sessionFactory"
            class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
            <property name="dataSource" ref="mysqlDataSource" />
            <property name="packagesToScan">
                <list>
                    <value>com.fhzz.business.entity</value>
                    <value>com.fhzz.core.dao</value>
                    <value>com.fhzz.business.service</value>
                </list>
            </property>
            <property name="hibernateProperties">
                <props>
                    <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                    <prop key="hibernate.show_sql">false</prop>
                    <prop key="hibernate.format_sql">false</prop>
                    <prop key="hibernate.query.substitutions">true 1, false 0</prop>
                    <prop key="hibernate.default_batch_fetch_size">16</prop>
                    <prop key="hibernate.max_fetch_depth">2</prop>
                    <prop key="hibernate.generate_statistics">true</prop>
                    <prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
                    <prop key="current_session_context_class">thread</prop>

                    <prop key="hibernate.connection.autoReconnect">true</prop>
                    <prop key="hibernate.connection.autoReconnectForPools">true</prop>
                    <prop key="hibernate.connection.is-connection-validation-required">true</prop>
    -->
	<!-- 缓存Cache配置 -->
	<!-- 	<prop key="hibernate.cache.provider_class">org.hibernate.cache.SingletonEhCacheProvider</prop>
        <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.SingletonEhCacheRegionFactory
        </prop>
        <prop key="hibernate.cache.use_second_level_cache">true</prop>
        <prop key="hibernate.cache.use_query_cache">true</prop>
        <prop key="net.sf.ehcache.configurationResourceName">resources/ehcache.xml</prop>
        <prop key="hibernate.cache.use_structured_entries">true</prop>
    </props>
</property>
</bean>-->

	<!-- 开启AOP监听 只对当前配置文件有效 -->
	<aop:aspectj-autoproxy expose-proxy="true" />

	<!-- 开启注解事务 只对当前配置文件有效 -->
	<tx:annotation-driven transaction-manager="txManager"
						  proxy-target-class="true" />

	<!-- 事务处理 -->
	<!--<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>-->

	<!-- 事物传播属性配置 -->
	<!--<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" timeout="90" />
			<tx:method name="add*" propagation="REQUIRED" timeout="90" />
			<tx:method name="record*" propagation="REQUIRED" timeout="90" />
			<tx:method name="create*" propagation="REQUIRED" timeout="90" />
			<tx:method name="insert*" propagation="REQUIRED" timeout="90" />
			<tx:method name="update*" propagation="REQUIRED" timeout="90" />
			<tx:method name="merge*" propagation="REQUIRED" timeout="90" />
			<tx:method name="del*" propagation="REQUIRED" timeout="90" />
			<tx:method name="remove*" propagation="REQUIRED" timeout="90" />
			<tx:method name="put*" propagation="REQUIRED" timeout="90" />
			<tx:method name="use*" propagation="REQUIRED" timeout="90" />
			<tx:method name="sync*" propagation="REQUIRED" timeout="90" />
			<tx:method name="copy*" propagation="REQUIRED" timeout="90" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true"
				timeout="90" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true"
				timeout="90" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true"
				timeout="90" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true"
				timeout="90" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true"
				timeout="90" />
			<tx:method name="synPoint*" propagation="REQUIRED" timeout="300" />
			<tx:method name="*" read-only="true" timeout="90" />

		</tx:attributes>
	</tx:advice> -->

	<!-- 事务拦截配置 -->
	<!--<aop:config expose-proxy="true">
		<aop:pointcut id="txPointcut" expression="execution(* com.fhzz..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config> -->



	<!-- Hibernate Mysql-->
	<bean id="sessionFactory"
		  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="mysqlDataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.fhzz.business.entity</value>
				<value>com.fhzz.core.dao</value>
				<value>com.fhzz.business.service</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.query.substitutions">true 1, false 0</prop>
				<prop key="hibernate.default_batch_fetch_size">16</prop>
				<prop key="hibernate.max_fetch_depth">2</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
				<prop key="current_session_context_class">thread</prop>

				<prop key="hibernate.connection.autoReconnect">true</prop>
				<prop key="hibernate.connection.autoReconnectForPools">true</prop>
				<prop key="hibernate.connection.is-connection-validation-required">true</prop>
			</props>
		</property>
	</bean>

	<!-- 开启AOP监听 只对当前配置文件有效 -->
	<aop:aspectj-autoproxy expose-proxy="true" />

	<!-- 开启注解事务 只对当前配置文件有效 -->
	<tx:annotation-driven transaction-manager="txManagerMySql"
						  proxy-target-class="true" />

	<!-- 事务处理 -->
	<bean id="txManagerMySql"
		  class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 事物传播属性配置 -->
	<tx:advice id="txAdviceMySql" transaction-manager="txManagerMySql">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" read-only="false" timeout="90" />
			<tx:method name="add*" propagation="REQUIRED" timeout="90" />
			<tx:method name="record*" propagation="REQUIRED" timeout="90" />
			<tx:method name="create*" propagation="REQUIRED" read-only="false" timeout="90" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" timeout="90" />
			<tx:method name="update*" propagation="REQUIRED" timeout="90" />
			<tx:method name="merge*" propagation="REQUIRED" timeout="90" />
			<tx:method name="del*" propagation="REQUIRED" timeout="90" />
			<tx:method name="remove*" propagation="REQUIRED" timeout="90" />
			<tx:method name="put*" propagation="REQUIRED" timeout="90" />
			<tx:method name="use*" propagation="REQUIRED" timeout="90" />
			<tx:method name="sync*" propagation="REQUIRED" timeout="90" />
			<tx:method name="copy*" propagation="REQUIRED" timeout="90" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true"
					   timeout="90" />
			<tx:method name="count*" propagation="REQUIRED" read-only="false"
					   timeout="90" />
			<tx:method name="find*" propagation="REQUIRED" read-only="false"
					   timeout="90" />
			<tx:method name="list*" propagation="REQUIRED" read-only="false"
					   timeout="90" />
			<tx:method name="query*" propagation="REQUIRED" read-only="false"
					   timeout="90" />
			<tx:method name="synPoint*" propagation="REQUIRED" timeout="300" />
			<tx:method name="*" read-only="true" timeout="90" />
		</tx:attributes>
	</tx:advice>

	<tx:advice id="txAdviceMySql" transaction-manager="txManagerMySql">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" timeout="90" />
			<tx:method name="add*" propagation="REQUIRED" timeout="90" />
			<tx:method name="record*" propagation="REQUIRED" timeout="90" />
			<tx:method name="create*" propagation="REQUIRED" timeout="90" />
			<tx:method name="insert*" propagation="REQUIRED" timeout="90" />
			<tx:method name="update*" propagation="REQUIRED" timeout="90" />
			<tx:method name="merge*" propagation="REQUIRED" timeout="90" />
			<tx:method name="del*" propagation="REQUIRED" timeout="90" />
			<tx:method name="remove*" propagation="REQUIRED" timeout="90" />
			<tx:method name="put*" propagation="REQUIRED" timeout="90" />
			<tx:method name="use*" propagation="REQUIRED" timeout="90" />
			<tx:method name="sync*" propagation="REQUIRED" timeout="90" />
			<tx:method name="copy*" propagation="REQUIRED" timeout="90" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true"
					   timeout="90" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true"
					   timeout="90" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true"
					   timeout="90" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true"
					   timeout="90" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true"
					   timeout="90" />
			<tx:method name="synPoint*" propagation="REQUIRED" timeout="300" />
			<tx:method name="*" timeout="90" />
		</tx:attributes>
	</tx:advice>


	<!-- 事务拦截配置 -->
	<aop:config expose-proxy="true">
		<aop:pointcut id="txPointcut" expression="execution(* com.fhzz..*.*(..))" />
		<aop:advisor advice-ref="txAdviceMySql" pointcut-ref="txPointcut" />
	</aop:config>



</beans>